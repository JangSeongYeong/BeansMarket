<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beans.market.message.dao.MessageDAO">	
	<!--
		SELECT message_idx, content, reg_date, receive_email, receive_del, sender_email, sender_del, read_check, idx
		FROM deal_message
		WHERE idx=#{param1} AND (receive_email IN(#{param2}, #{param3}) AND sender_email IN(#{param2}, #{param3}))
	  -->
	<select id="messageList" resultType="com.beans.market.message.dto.MessageDTO">
		SELECT 
			dm.message_idx, 
			dm.content, 
			dm.reg_date, 
			dm.receive_email, 
			dm.receive_del, 
			dm.sender_email, 
			dm.sender_del, 
			dm.read_check,
			dm.idx, 
			p.new_picname
		FROM deal_message dm 
			LEFT JOIN (SELECT p.new_picname, p.idx from photo p where p.option_idx = 2) AS p ON dm.message_idx = p.idx
			WHERE dm.idx= #{param1} 
				AND (dm.receive_email IN(#{param2}, #{param3}) 
				AND dm.sender_email IN(#{param2}, #{param3}))
	</select>
	
	<update id="messageRead">
		UPDATE deal_message SET read_check = 'Y' 
			WHERE idx = #{param1} 
			AND receive_email = #{param2} 
			AND sender_email = #{param3} 
			AND read_check = 'N'
	</update>
	
	<insert id="sendMessage">
		INSERT INTO deal_message(content, receive_email, sender_email, idx) 
			VALUES(#{param1}, #{param2}, #{param3}, #{param4})
	</insert>
	
	<insert id="sendMessagePic" 
		useGeneratedKeys="true"
		keyColumn="message_idx"
		keyProperty="message_idx"
		parameterType="com.beans.market.message.dto.MessageDTO">
		INSERT INTO deal_message(content, receive_email, sender_email, idx) 
			VALUES(#{content}, #{receive_email}, #{sender_email}, #{idx})
	</insert>
	
	<select id="roomList" resultType="com.beans.market.message.dto.RoomDTO">
		SELECT 
			dm.idx, 
			IF (dm.receive_email = #{param1}, dm.sender_email, dm.receive_email) AS other_email, 
			b.subject, 
			MAX(dm.reg_date) AS reg_date, 
			(SELECT name FROM member where email = other_email) name,
			(SELECT COUNT(idx) 
				FROM deal_message 
				WHERE idx = dm.idx 
					AND( (sender_email = #{param1} AND sender_del = 'N')
					OR (receive_email = #{param1} AND receive_del = 'N') )
			) AS msg_count,
			(SELECT COUNT(idx) 
				FROM deal_message 
				WHERE idx = dm.idx 
					AND( (sender_email = #{param1} AND sender_del = 'N')
					OR (receive_email = #{param1} AND receive_del = 'N') )
					AND( receive_email = #{param1} AND read_check = 'N')
			) AS no_read
		FROM deal_message dm LEFT JOIN (SELECT b.idx, b.email, b.subject FROM bbs b) AS b ON dm.idx = b.idx
		WHERE dm.sender_email = #{param1} OR dm.receive_email = #{param1}
		GROUP BY dm.idx, other_email
		ORDER BY reg_date desc
	</select>
	
	<select id="lastContent" resultType="com.beans.market.message.dto.RoomDTO">
		SELECT dm.content, dm.reg_date, p.new_picname
			FROM deal_message dm 
			LEFT JOIN (SELECT p.idx, p.new_picname FROM photo p WHERE p.main = 'Y' AND p.idx = #{param1}) AS p ON dm.idx = p.idx
			WHERE dm.idx = #{param1} 
				AND dm.receive_email IN(#{param2}, #{param3}) 
				AND dm.sender_email IN(#{param2}, #{param3})
				AND ( (dm.receive_email = #{param3} AND dm.receive_del = 'N') OR (dm.sender_email = #{param3} AND dm.sender_del = 'N') )
			ORDER BY dm.reg_date DESC LIMIT 1
	</select>
	
	<select id="getMessageInfo" resultType="com.beans.market.message.dto.MessageDTO">
		SELECT message_idx, content, reg_date, receive_email, receive_del, sender_email, sender_del, read_check, idx
			FROM deal_message WHERE message_idx = #{param1}
	</select>
	<update id="updateSenderDel">
		UPDATE deal_message SET sender_del = 'Y' WHERE message_idx = #{param1}
	</update>
	
	<update id="updateReceiveDel">
		UPDATE deal_message SET receive_del = 'Y' WHERE message_idx = #{param1}
	</update>
	
	
</mapper>