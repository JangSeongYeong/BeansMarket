<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beans.market.main.dao.MainDAO">



	<!-- 게시글 리스트 불러오기 -->
	<!-- 최신순 -->
	<select id="goodsList" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state
		FROM bbs
		WHERE draft = 'N' AND blind='N' AND hidden='N'
			AND email NOT IN (SELECT block_email FROM block WHERE email=#{param1})
		ORDER BY 
			CASE 
				WHEN bbs_state ='거래가능' OR bbs_state ='예약중' THEN 1 
				ELSE 2 
			END, 
			reg_date DESC
		LiMIT 24 OFFSET #{param2}
	</select>
	<select id="goodsList2" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state
		FROM bbs
		WHERE option = '판매' AND draft = 'N' AND blind='N' AND hidden='N'
			AND email NOT IN (SELECT block_email FROM block WHERE email=#{param1})
		ORDER BY 
			CASE 
				WHEN bbs_state ='거래가능' OR bbs_state ='예약중' THEN 1 
				ELSE 2 
			END, 
			reg_date DESC
		LiMIT 24 OFFSET #{param2}
	</select>
	<select id="goodsList3" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state
		FROM bbs
		WHERE option = '경매' AND draft = 'N' AND blind='N' AND hidden='N'
			AND email NOT IN (SELECT block_email FROM block WHERE email=#{param1})
		ORDER BY 
			CASE 
				WHEN bbs_state ='거래가능' OR bbs_state ='예약중' THEN 1 
				ELSE 2 
			END, 
			reg_date DESC
		LiMIT 24 OFFSET #{param2}
	</select>
	<select id="goodsList4" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state
		FROM bbs
		WHERE option != '판매' AND option != '경매' AND draft = 'N' AND blind='N' AND hidden='N'
			AND email NOT IN (SELECT block_email FROM block WHERE email=#{param1})
		ORDER BY 
			CASE 
				WHEN bbs_state ='거래가능' OR bbs_state ='예약중' THEN 1 
				ELSE 2 
			END, 
			reg_date DESC
		LiMIT 24 OFFSET #{param2}
	</select>
	<!-- 인기순 -->
	<select id="goodsHitList" resultType="com.beans.market.main.dto.MainDTO">
		SELECT b.idx, b.option, b.email, b.subject, b.price, b.bbs_state, b.reg_date
		FROM bbs b 
			LEFT OUTER JOIN interest i 
			ON b.idx = i.idx
		WHERE draft = 'N' AND blind='N' AND hidden='N'
			AND b.email NOT IN (SELECT block_email FROM block bl WHERE bl.email=#{param1})
		GROUP BY b.idx
		ORDER BY 
			CASE 
				WHEN b.bbs_state ='거래가능' OR b.bbs_state ='예약중' THEN 1 
				ELSE 2
			END, 
			COUNT(i.email) DESC , 
			b.reg_date DESC
		LiMIT 24 OFFSET #{param2}
	</select>
	<select id="goodsHitList2" resultType="com.beans.market.main.dto.MainDTO">
		SELECT b.idx, b.option, b.email, b.subject, b.price, b.bbs_state, b.reg_date
		FROM bbs b 
			LEFT OUTER JOIN interest i 
			ON b.idx = i.idx
		WHERE option = '판매' AND draft = 'N' AND blind='N' AND hidden='N'
			AND b.email NOT IN (SELECT block_email FROM block bl WHERE bl.email=#{param1})
		GROUP BY b.idx
		ORDER BY 
			CASE 
				WHEN b.bbs_state ='거래가능' OR b.bbs_state ='예약중' THEN 1 
				ELSE 2
			END, 
			COUNT(i.email) DESC , 
			b.reg_date DESC
		LiMIT 24 OFFSET #{param2}
	</select>
	<select id="goodsHitList3" resultType="com.beans.market.main.dto.MainDTO">
		SELECT b.idx, b.option, b.email, b.subject, b.price, b.bbs_state, b.reg_date
		FROM bbs b 
			LEFT OUTER JOIN interest i 
			ON b.idx = i.idx
		WHERE option = '경매' AND draft = 'N' AND blind='N' AND hidden='N'
			AND b.email NOT IN (SELECT block_email FROM block bl WHERE bl.email=#{param1})
		GROUP BY b.idx
		ORDER BY 
			CASE 
				WHEN b.bbs_state ='거래가능' OR b.bbs_state ='예약중' THEN 1 
				ELSE 2
			END, 
			COUNT(i.email) DESC , 
			b.reg_date DESC
		LiMIT 24 OFFSET #{param2}
	</select>
	<select id="goodsHitList4" resultType="com.beans.market.main.dto.MainDTO">
		SELECT b.idx, b.option, b.email, b.subject, b.price, b.bbs_state, b.reg_date
		FROM bbs b 
			LEFT OUTER JOIN interest i 
			ON b.idx = i.idx
		WHERE option != '판매' AND option != '경매' AND draft = 'N' AND blind='N' AND hidden='N'
			AND b.email NOT IN (SELECT block_email FROM block bl WHERE bl.email=#{param1})
		GROUP BY b.idx
		ORDER BY 
			CASE 
				WHEN b.bbs_state ='거래가능' OR b.bbs_state ='예약중' THEN 1 
				ELSE 2
			END, 
			COUNT(i.email) DESC , 
			b.reg_date DESC
		LiMIT 24 OFFSET #{param2}
	</select>
	<!-- 로그인 했어도, 전체 범위면 -->
	<select id="myGetLocation" resultType="String">
		SELECT location FROM member WHERE email = #{param1}
	</select>
	<!-- 로그인시, 거래범위에 따라 -->
	<select id="equalsLocation" resultType="Integer">
		SELECT COUNT(my.location) 
		FROM member my
		WHERE my.location = (SELECT m.location
							FROM bbs b JOIN member m ON b.email = m.email 
							WHERE b.idx = #{param1})
			  AND my.email = #{param2}
	</select>
	<!-- 총 페이지 개수 -->
	<select id="allCount" resultType="int">
		SELECT CEIL(COUNT(idx)/24) 
		FROM bbs
		WHERE draft = 'N' AND blind='N' AND hidden='N' 
			AND email NOT IN (SELECT block_email FROM block WHERE email=#{param1});
	</select>
	<select id="allCount2" resultType="int">
		SELECT CEIL(COUNT(idx)/24) 
		FROM bbs
		WHERE option = '판매' AND draft = 'N' AND blind='N' AND hidden='N' 
			AND email NOT IN (SELECT block_email FROM block WHERE email=#{param1});
	</select>
	<select id="allCount3" resultType="int">
		SELECT CEIL(COUNT(idx)/24) 
		FROM bbs
		WHERE option = '경매' AND draft = 'N' AND blind='N' AND hidden='N' 
			AND email NOT IN (SELECT block_email FROM block WHERE email=#{param1});
	</select>
	<select id="allCount4" resultType="int">
		SELECT CEIL(COUNT(idx)/24) 
		FROM bbs
		WHERE option != '판매' AND option != '경매' AND draft = 'N' AND blind='N' AND hidden='N' 
			AND email NOT IN (SELECT block_email FROM block WHERE email=#{param1});
	</select>
	
	
	<!-- 판매자 닉네임 -->
	<select id="sellerName" resultType="String">
		SELECT name 
		FROM member 
		WHERE email = (SELECT email FROM bbs WHERE idx=#{param1});
	</select>
	<!-- 게시글 대표 사진 -->
	<select id="mainPhoto" resultType="String">
		SELECT new_picname 
		FROM photo 
		WHERE idx = #{param1} AND main = 'Y';
	</select>
	<!-- 게시글의 총 관심 개수 -->
	<select id="heartCnt" resultType="Integer">
		SELECT COUNT(email) 
		FROM interest 
		WHERE idx = #{param1}
	</select>
	<!-- 경매 - 즉시 낙찰가, 입찰 횟수 -->
	<select id="fullPrice" resultType="Integer">
		SELECT successful_bid
		FROM auction 
		WHERE idx = #{param1}
	</select>
	<select id="bidCnt" resultType="Integer">
		SELECT bid_count
		FROM auction 
		WHERE idx = #{param1}
	</select>
	<!-- 로그인 시, 나의 관심목록 표시 -->
	<select id="mine" resultType="Integer">
		SELECT COUNT(email) AS mine 
		FROM interest 
		WHERE idx = #{param1} AND email = #{param2}
	</select>
	
	
	
	<!-- 게시글 관심 등록삭제 -->
	<insert id="clickHeart">
		INSERT INTO interest (idx, email)
		VALUES (#{param1}, #{param2})
	</insert>
	<delete id="deleteHeart">
		DELETE FROM interest
		WHERE idx = #{param1} AND email = #{param2}
	</delete>
	
	
	
	<!-- 게시글 제목 검색 -->
	<select id="bbsSearch" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state
		FROM bbs
		WHERE subject LIKE CONCAT('%', #{param1}, '%')
		ORDER BY 
			CASE 
				WHEN bbs_state ='거래가능' OR bbs_state ='예약' THEN 1 
				ELSE 2 
			END, 
			reg_date DESC
	</select>
	
	
	
	<!-- 게시글 카테고리 검색 -->
	<select id="bbsCategorySearch" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state
		FROM bbs
		WHERE category_idx = (SELECT category_idx FROM category WHERE category_name = #{param1})
		ORDER BY 
			CASE 
				WHEN bbs_state ='거래가능' OR bbs_state ='예약' THEN 1 
				ELSE 2 
			END, 
			reg_date DESC
	</select>
	
	
	
	<!-- 알림 -->
	<select id="newAlarm" resultType="Integer">
		SELECT COUNT(email)
		FROM alarm
		WHERE email = #{param1} AND checked = 'N';
	</select>
	<select id="alarm" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, email, checked, content, link, reg_date
		FROM alarm
		WHERE email = #{param1}
		ORDER BY reg_date DESC
	</select>
	<!-- 알림 읽음 -->
	<update id="alarmRead">
		UPDATE alarm SET checked = 'Y' WHERE idx = #{param1}
	</update>
	<!-- 알림에 링크가 있다면 -->
	<select id="alarmReadUrl" resultType="String">
		SELECT link
		FROM alarm
		WHERE idx = #{param1}
	</select>
	<!-- 알림 전송 -->
	<insert id="alarmSend">
		INSERT INTO alarm (content, email) VALUES (#{param1}, #{param2});
	</insert>
	<insert id="alarmSendLink">
		INSERT INTO alarm (content, email, link) VALUES (#{param1}, #{param2}, #{param3});
	</insert>

	
	<!-- 최근 본 게시글 -->
	<select id="recentBBS" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state, blind, hidden
		FROM bbs
		WHERE idx = #{param1}
	</select>
	
	
	
	
	<!-- 멤버 프로필 가져오기 -->
	<select id="profile" resultType="com.beans.market.member.dto.MemberDTO">
		SELECT email, name, location, birth_date, gender, point, 
			(select count(coment) from deal_coment where email=#{param1} and coment='positive') as posiCnt,
			(select count(coment) from deal_coment where email=#{param1} and coment='negative') as negaCnt
		FROM member
		WHERE email = #{param1}
	</select>
	<!-- 멤버 프로필 사진 -->
	<select id="profilePic" resultType="com.beans.market.photo.dto.ProfilePicDTO">
		SELECT new_filename
		FROM member_profilepic
		WHERE email = #{param1} AND confirmed = 'Y'
	</select>
	
	
	<!-- 관심목록  -->
	<select id="nicname" resultType="String">
		SELECT name
		FROM member
		WHERE email = #{param1}
	</select>
	
	
	
	
	
	
	<!-- 1:1 문의하기 -->
	<!-- 글 작성 시, 사진 미리보기 -->
	<insert id="tempoPhoto">
		INSERT INTO photo(new_picname, idx, option_idx)
		VALUES(#{param3}, #{param1}, 3)
	</insert>
	<!-- 글 작성 시, 사진의 idx 받아오기 -->
	<select id="tempoPhotoGetPicidx" resultType="Integer">
		SELECT pic_idx
		FROM photo
		WHERE new_picname = #{param1} AND option_idx = 3
	</select>
	<!-- 글 작성 시, 사진의 name들 갖고오기... -->
	<select id="tempoPhotoGetNames" resultType="String">
		SELECT new_picname
		FROM photo
		WHERE idx = #{param1} AND option_idx = 3
	</select>
	<!-- 글 작성 시, 사진 삭제 -->
	<delete id="tempoPhotoDel2">
		DELETE FROM photo
		WHERE pic_idx = #{param1} AND option_idx = 3
	</delete>
	<!-- 글 작성 -->
	<insert id="writeInquire"
			useGeneratedKeys="true"
			keyColumn="inquiry_idx"
			keyProperty="inquiry_idx"
			parameterType="com.beans.market.main.dto.InquiryDTO">
		INSERT into inquiry(inquiry_pw, inquiry_title, inquiry_account, enquirer, category_idx)
		VALUES (#{inquiry_pw}, #{inquiry_title}, #{inquiry_account}, #{enquirer}, #{category_idx})
	</insert>
	<!-- 글 사진 업데이트 -->
	<update id="photoSave">
		update photo
		set main = 'Y',
			idx = #{param1}
		where new_picname = #{param2}
	</update>
	
	<!-- 문의 리스트 출력 -->
	<select id="inquireListAjax" resultType="com.beans.market.main.dto.InquiryDTO">
		SELECT inquiry_idx, inquiry_pw, inquiry_title, inquiry_account, reg_date, enquirer, category_idx, success 
		FROM inquiry 
		ORDER BY reg_date DESC
	</select>
	<!-- 문의 상세보기 -->
	<select id="inquireDetail" resultType="com.beans.market.main.dto.InquiryDTO">
		SELECT i.inquiry_idx, i.inquiry_pw, i.inquiry_title, i.inquiry_account, i.reg_date, i.enquirer, c.category_name , i.success,
				ir.reply, ir.reply_date, ir.id 
		FROM inquiry i 
				left outer join inq_reply ir on i.inquiry_idx = ir.inquiry_idx
				join category c on i.category_idx = c.category_idx 
		where i.inquiry_idx = #{param1}
	</select>
	<select id="inquireGetPhoto" resultType="com.beans.market.photo.dto.PhotoDTO">
		SELECT new_picname
		FROM photo
		WHERE idx = #{param1} AND option_idx = 3
	</select>
	
	
	
	<select id="getName" resultType="String">
		SELECT name FROM member WHERE email = #{param1}
	</select>
	
	
	
	

</mapper>