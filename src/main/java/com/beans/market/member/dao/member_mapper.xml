<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beans.market.member.dao.MemberDAO">	
	
	<!-- 아이디 등록 여부 -->
	<select id="overlay" resultType="int">
		SELECT COUNT(email)FROM member WHERE email = #{param1}
	</select>
	<!--로그인-->
	<select id="login" resultType="com.beans.market.member.dto.MemberDTO">
		SELECT email, location, scope, name, birth_date, gender, point, login_banend
		FROM member 
		WHERE email= #{param1} AND pw= #{param2} AND secession = 'N'
	</select>
	
	<select id="loginCount" resultType="Integer">
		SELECT login_count FROM member WHERE email = #{param1}
	</select>
	
	<update id="loginCountUp">
    	UPDATE member SET login_count = login_count + 1 WHERE email = #{param1}
	</update>
	
	<update id="loginCountReset">
    	UPDATE member SET login_count = 0 WHERE email = #{param1}
	</update>
	
	<select id="emailCheck" resultType="Integer">
		SELECT COUNT(email)FROM member WHERE email = #{param1}
	</select>
	
	
	<!-- 로그인 이메일만 -->
	<select id="logEmail" resultType="String">
		SELECT email, location, scope, name, birth_date, gender, point, dormant, login_count, warn_count
			FROM member 
		WHERE email= #{param1} AND pw= #{param2} AND secession = 'N'
	</select>
	
	<!-- 로그인 마지막날짜 업데이트 -->
	<update id="updateLastLoginDate" parameterType="java.util.Map">
    	UPDATE member
    	SET last_login = #{lastLoginDate}
    	WHERE email = #{email}
	</update>
	

	<!-- 비밀번호 변경하기 -->
	<update id="newPW" parameterType="String">
	    UPDATE member
	    SET pw = #{param2}
	    WHERE email = #{param1}
	</update>
	

	<!--  나의 빈즈 내역 -->
	<select id="list" resultType="com.beans.market.member.dto.MemberDTO">
		SELECT idx, email, option, price, content, reg_date from pay_hist
	</select>
	
	<!--  나의 빈즈페이 액수 -->
	<select id="getMyAmount" resultType="int">
    	SELECT point FROM member WHERE email = #{email}
	</select>
	
	<!-- 회원가입 -->
	<insert id = "join" parameterType="Map">
	    INSERT INTO member(email,pw,name,birth_date,gender,location,scope)
	    VALUES(#{email},#{pw},#{name},#{birth},#{gender},#{location},#{scope})
	</insert>
	
	<!-- 프로필사진 -->
	<insert id="saveprofile" parameterType="Map">
	    INSERT INTO member_profilepic (email, new_filename, reg_date, confirmed)
	    VALUES (#{email},#{newFilename},NOW(),#{confirmed}
	    )
	</insert>
	
	<!-- 회원가입중복체크 -->
	<select id="joinoverlay" resultType="Object">
		SELECT COUNT(email)FROM member WHERE email = #{param1}
	</select>

	<!-- 판매자 정보 받아오기 -->
	<select id ="sellerInfo" resultType="com.beans.market.member.dto.SellerDTO">
		SELECT 
			name 
			,email
			,(SELECT count(coment) FROM deal_coment WHERE email = #{param1} AND coment = 'positive') AS positiveCount
			,(SELECT count(coment) FROM deal_coment WHERE email = #{param1} AND coment = 'negative') AS negativeCount
		FROM member WHERE email = #{param1}
	</select>
	
	<select id="nowPoint" resultType="Integer">
		SELECT point FROM member WHERE email = #{param1}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 마이페이지 -->
	<select id="profileGet" resultType="com.beans.market.member.dto.MemberDTO">
		SELECT email, name, location, birth_Date, gender, point
		FROM member
		WHERE email = #{param1}
	</select>
	<select id="profilePicGet" resultType="com.beans.market.photo.dto.ProfilePicDTO">
		SELECT new_filename
		FROM member_profilepic
		WHERE email = #{param1} AND confirmed = 'Y'
	</select>
	<!-- 마이페이지 - 탈퇴하기 -->
	<update id="secession">
		UPDATE member
		SET pw = '.', location = '.', scope = '.', name = '.',
			birth_date = '1000-01-01', gender = '.', point = 0,
			secession = 'Y'
		WHERE email = #{param1}
	</update>
	
	<!-- 마이페이지 - 프로필 사진 수정(인설트) -->
	<insert id="newPicPath">
		insert into member_profilepic (email, new_filename, confirmed)
		values(#{param1}, #{param2}, 'N');
	</insert>
	
	<!-- 마에피이지 - 수정완료 (프로필 확정 전인 사진들 삭제하자) -->
	<!-- O -->
	<update id="profilePicO">
		update member_profilepic set confirmed = 'O'
		where email = #{logEmail} and new_filename = #{realPicPath}
	</update>
	<!-- !O 삭제 -->
	<delete id="profilePicDel">
		delete from member_profilepic
		where email = #{logEmail} and confirmed != 'O'
	</delete>
	<!-- O-> Y로 변경(확정) -->
	<update id="profilePicY">
		update member_profilepic set confirmed = 'Y'
		where email = #{logEmail}
	</update>
	
	<!-- 마이페이지 - 수정완료 -->
	<update id="profileUpdate">
		update member set name = #{name}, pw=#{pwReset}, location = #{location}, birth_date = #{birth_date}, gender = #{gender}
		where email = #{logEmail} 
	</update>
	
	
	
	<!-- 관심목록 끌거오깅 -->
	<select id="mineIdxList" parameterType="String" resultType="java.lang.Integer">
		SELECT idx FROM interest WHERE email = #{param1} ORDER BY reg_date DESC
	</select>
	<select id="mineIdxGoodsList" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state, hidden
		FROM bbs
		WHERE idx = #{param1} AND draft = 'N'
	</select>
	
	
	
	<!-- 차단 회원 목록 -->
	<select id="banList" resultType="com.beans.market.member.dto.BlockDTO">
		SELECT block_email FROM block WHERE email = #{param1}
	</select>
	<select id="banProfile" resultType="String">
		SELECT name FROM member WHERE email = #{param1}
	</select>
	<!-- 차단 해제 -->
	<delete id="banUnravel">
		DELETE FROM block 
		WHERE email = #{param1} AND block_email = #{param2}
	</delete>
	
	
	<!-- 나의 판매 내역 -->
	<select id="mySellIdxList" parameterType="String" resultType="java.lang.Integer">
		SELECT idx FROM bbs WHERE email = #{param1} AND blind='N' ORDER BY reg_date DESC
	</select>
	<select id="mySellIdxList2" parameterType="String" resultType="java.lang.Integer">
		SELECT idx FROM bbs WHERE email = #{param1} AND bbs_state != '거래완료' AND blind='N' ORDER BY reg_date DESC
	</select>
	<select id="mySellIdxList3" parameterType="String" resultType="java.lang.Integer">
		SELECT idx FROM bbs WHERE email = #{param1} AND bbs_state = '거래완료' AND blind='N' ORDER BY reg_date DESC
	</select>
	<select id="mySellIdxList4" parameterType="String" resultType="java.lang.Integer">
		SELECT idx FROM bbs WHERE email = #{param1} AND hidden = 'Y' AND blind='N' ORDER BY reg_date DESC
	</select>
	<select id="mySellIdxGoodsList" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state, hidden
		FROM bbs
		WHERE idx = #{param1} AND draft = 'N'
	</select>
	<!-- 판매 내역 관리 -->
	<update id="mySellManage">
		UPDATE bbs SET hidden = 'Y' WHERE idx = #{param1}
	</update>
	<update id="mySellManage2">
		UPDATE bbs SET hidden = 'N' WHERE idx = #{param1}
	</update>
	<update id="mySellManage3">
		UPDATE bbs SET blind = 'Y' WHERE idx = #{param1}
	</update>
	
	<!-- 구매 내역 -->
	<select id="myBuyIdxList" parameterType="String" resultType="java.lang.Integer">
		SELECT idx FROM deal_detail WHERE buyer_email = #{param1} AND blind='N' ORDER BY reg_date DESC
	</select>
	<!-- 구매 내역 관리 -->
	<update id="myBuyManage">
		UPDATE deal_detail SET blind='Y' WHERE idx = #{param1}
	</update>
	
	
	<!-- 거래 미승인 목록 - 내가 관여한 bbs idx 뽑아오기 -->
	<select id="mybbsArr" parameterType="String" resultType="java.lang.Integer">
		SELECT idx 
		FROM bbs 
		WHERE bbs_state='예약중' AND (email = #{param1} OR reserve_email = #{param1})
		ORDER BY idx
	</select>
	<select id="myApproved" resultType="Integer">
		SELECT COUNT(*) 
		FROM deal_approv_hist 
		WHERE idx=#{param1} AND email = #{param2}
	</select>
	<select id="opponentApproved" resultType="com.beans.market.message.dto.ApproveDTO">
		SELECT b.idx, b.subject, b.option, p.new_picname, a.reg_date, b.reserve_email
		FROM bbs b 
			JOIN photo p ON b.idx = p.idx AND p.option_idx = 1 AND p.main = 'Y'
			JOIN deal_approv_hist a ON b.idx = a.idx AND a.email != #{param2}
		WHERE b.idx = #{param1} AND b.bbs_state ='예약중'
	</select>
	<insert id="myApproveClick">
		INSERT INTO deal_approv_hist (email, idx)
		VALUES (#{param1}, #{param2})
	</insert>
	
	<!-- 타 회원 판매 품목 리스트 -->
	<select id="otherGoodsList" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state, hidden
		FROM bbs
		WHERE email = #{param1} AND draft = 'N'
	</select>
	<!-- 타 회원 차단 -->
	<insert id="otherBan">
		INSERT INTO block 
		VALUES (#{param1}, #{param2})
	</insert>
	
	
	
	
	
	
	
	
	
	<!-- 나의 입찰 목록 -->
	<select id="auctionBid" resultType="com.beans.market.member.dto.AuctionDTO">
		SELECT d.idx, 
		       (SELECT MAX(price) 
		        FROM deal_aution_hist 
		        WHERE idx = d.idx) AS price,
		       d.reg_date
		FROM deal_aution_hist d
		WHERE d.email= #{param1}
		GROUP BY d.idx
		ORDER BY d.reg_date DESC
	</select>
	<!-- 대표 사진 -->
	<select id="getBidPic" resultType="String">
		SELECT new_picname 
		FROM photo 
		WHERE idx = #{param1} AND option_idx=1 AND main='Y'
	</select>
	<!-- 제목 -->
	<select id="getBidSubject" resultType="string">
	    SELECT subject FROM bbs WHERE idx = #{param1}
	</select>
	<!-- 경매 마감일 -->
	<select id="getBidClose" resultType="java.sql.Timestamp">
	    SELECT close_date FROM auction WHERE idx = #{param1}
	</select>
	<!-- 경매상태 -->
	<select id="getBidState" resultType="string">
	    SELECT bbs_state FROM bbs WHERE idx = #{param1}
	</select>
	<!-- 현재 입찰자 -->
	<select id="getBidderY" resultType="Integer">
		SELECT COUNT(reserve_email) 
		FROM bbs 
		WHERE idx=#{param1} AND option='경매' AND (bbs_state='예약중' OR bbs_state='거래완료') AND reserve_email = #{param2}
	</select>
	
</mapper>