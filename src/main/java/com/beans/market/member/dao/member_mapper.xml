<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beans.market.member.dao.MemberDAO">	
	
	<!-- 아이디 등록 여부 -->
	<select id="overlay" resultType="int">
		SELECT COUNT(email)FROM member WHERE email = #{param1}
	</select>
	<!--로그인-->
	<select id="login" resultType="com.beans.market.member.dto.MemberDTO">
		SELECT email,location,scope,name,birth_date,gender,point FROM member WHERE email= #{param1} AND pw= #{param2}
	</select>
	<!-- 로그인 이메일만 -->
	<select id="logEmail" resultType="String">
		SELECT email, location, scope, name, birth_date, gender, point, dormant, login_count, warn_count
			FROM member 
		WHERE email= #{param1} AND pw= #{param2}
	</select>
	
	<!-- 로그인 마지막날짜 업데이트 -->
	<update id="updateLastLoginDate" parameterType="java.util.Map">
    	UPDATE member
    	SET last_login = #{lastLoginDate}
    	WHERE email = #{email}
	</update>
	

	<!-- 비밀번호 변경하기 -->
	<update id="newPW" parameterType="String">
	    UPDATE member
	    SET pw = #{param2}
	    WHERE email = #{param1}
	</update>
	

	<!--  나의 빈즈 내역 -->
	<select id="list" resultType="com.beans.market.member.dto.MemberDTO">
		SELECT idx, email, option, price, content, reg_date from pay_hist
	</select>
	
	<!--  나의 빈즈페이 액수 -->
	<select id="getMyAmount" resultType="int">
    	SELECT point FROM member WHERE email = #{email}
	</select>
	
	<!-- 회원가입 -->
	<insert id = "join" parameterType="Map">
	    INSERT INTO member(email,pw,name,birth_date,gender,location,scope)
	    VALUES(#{email},#{pw},#{name},#{birth},#{gender},#{location},#{scope})
	</insert>
	
	<!-- 프로필사진 -->
	<insert id="saveprofile" parameterType="Map">
	    INSERT INTO member_profilepic (email, new_filename, reg_date)
	    VALUES (#{email},#{newFilename},NOW()
	    )
	</insert>
	
	<!-- 회원가입중복체크 -->
	<select id="joinoverlay" resultType="Object">
		SELECT COUNT(email)FROM member WHERE email = #{param1}
	</select>

	<!-- 판매자 정보 받아오기 -->
	<select id ="sellerInfo" resultType="com.beans.market.member.dto.SellerDTO">
		SELECT 
			name 
			,email
			,(SELECT count(coment) FROM deal_coment WHERE email = #{param1} AND coment = 'positive') AS positiveCount
			,(SELECT count(coment) FROM deal_coment WHERE email = #{param1} AND coment = 'negative') AS negativeCount
		FROM member WHERE email = #{param1}
	</select>
	
	<select id="nowPoint" resultType="Integer">
		SELECT point FROM member WHERE email = #{param1}
	</select>
	
	
	
	
	
	
	
	<!-- 마이페이지 -->
	<select id="profileGet" resultType="com.beans.market.member.dto.MemberDTO">
		SELECT email, name, location, birth_Date, gender, point
		FROM member
		WHERE email = #{param1}
	</select>
	<select id="profilePicGet" resultType="com.beans.market.photo.dto.ProfilePicDTO">
		SELECT new_filename
		FROM member_profilepic
		WHERE email = #{param1} AND confirmed = 'Y'
	</select>
	
	<!-- 마이페이지 - 프로필 사진 수정(인설트) -->
	<insert id="newPicPath">
		insert into member_profilepic (email, new_filename, confirmed)
		values(#{param1}, #{param2}, 'N');
	</insert>
	
	<!-- 마에피이지 - 수정완료 (프로필 확정 전인 사진들 삭제하자) -->
	<!-- O -->
	<update id="profilePicO">
		update member_profilepic set confirmed = 'O'
		where email = #{logEmail} and new_filename = #{realPicPath}
	</update>
	<!-- !O 삭제 -->
	<delete id="profilePicDel">
		delete from member_profilepic
		where email = #{logEmail} and confirmed != 'O'
	</delete>
	<!-- O-> Y로 변경(확정) -->
	<update id="profilePicY">
		update member_profilepic set confirmed = 'Y'
		where email = #{logEmail}
	</update>
	
	<!-- 마이페이지 - 수정완료 -->
	<update id="profileUpdate">
		update member set name = #{name}, location = #{location}, birth_date = #{birth_date}, gender = #{gender}
		where email = #{logEmail} 
	</update>
	
	
	
	<!-- 관심목록 끌거오깅 -->
	<select id="mineIdxList" parameterType="String" resultType="java.lang.Integer">
		SELECT idx FROM interest WHERE email = #{param1}
	</select>
	<select id="mineIdxGoodsList" resultType="com.beans.market.main.dto.MainDTO">
		SELECT idx, option, email, subject, price, reg_date, bbs_state
		FROM bbs
		WHERE idx = #{param1}
	</select>

	
</mapper>